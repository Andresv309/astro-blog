---
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';

export interface Props {
	title: string;
	description?: string;
}

const {
	title = "My Astro Blog",
	description = "Trying Astro Framework",
} = Astro.props as Props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/Logom.png"/>
		<meta name="color-scheme" content="dark light" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={description}>
		<title>Vlogify | {title}</title>
	</head>
	<body>
		<Header />

		<main class="md:p-8 h-full">
			<slot />
		</main>

		<Footer/>

	</body>
</html>
<style is:global>
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
		
		--background-color: #1f2023;
		--background-color-card: #363739; 
		--primary-color: #726EFF;
		--secondary-color: #00ec96;
		--color-text: white;
		--color-info-text: white;
		--color-category-bg: #00ec96;
		--color-category-text: rgb(0, 0, 0); 

		--shadow-color: 289deg 4% 20%;
		--swiper-theme-color: #00ec96;

		--shadow-elevation-high:
		0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.36),
    0.8px 1.6px 2px -0.8px hsl(var(--shadow-color) / 0.36),
    2.1px 4.1px 5.2px -1.7px hsl(var(--shadow-color) / 0.36),
    5px 10px 12.6px -2.5px hsl(var(--shadow-color) / 0.36);
	}	
	html {
		font-family: system-ui, sans-serif;
	}

	body {
		background-color: var(--background-color);
		color: var(--color-text); 
	}
	main {
		min-width: 350px;
		max-width: 1200px;
		padding-top: 2rem;
		margin: auto;
		min-height: 100%;
	}

	.light-theme {
		--background-color: #e8edf0;
		--background-color-card: #c6caca;  
		--color-category-bg: #fa8383;
		--primary-color: #7874EF;
		--secondary-color: #EF5555;
		--color-text: black; 
		--shadow-color: 289deg 4% 20%; 

	}
	.lunaIcon{
  	color: rgb(221, 21, 21);
  }

	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}

	
body {
  --sb-track-color: #232E33;
  --sb-thumb-color: var(--secondary-color);
  --sb-size: 10px;

  scrollbar-color: var(--sb-thumb-color) 
                   var(--sb-track-color);
}

body::-webkit-scrollbar {
  width: var(--sb-size) 
}

body::-webkit-scrollbar-track {
  background: var(--sb-track-color);
  border-radius: 0px;
}

body::-webkit-scrollbar-thumb {
  background: var(--sb-thumb-color);
  border-radius: 4px;
}
</style>


<script is:inline>
  const btnChangeThemeColor = document.querySelector("#toggle-button");
  const theme = localStorage.getItem("theme") ?? "dark-theme"
  btnChangeThemeColor.checked = theme === "light-theme"
  toggleTheme(theme)

  btnChangeThemeColor.addEventListener("change", () => {
    const theme = btnChangeThemeColor.checked ? "light-theme" : "dark-theme"
    localStorage.setItem("theme", theme)
    toggleTheme(theme)
  })

  function toggleTheme (theme) {document.body.classList.toggle("light-theme", theme === "light-theme")}
  
</script>